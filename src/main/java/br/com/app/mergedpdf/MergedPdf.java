package br.com.app.mergedpdf;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfReader;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.kernel.utils.PdfMerger;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

import java.io.File;
import java.io.IOException;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author Guilherme Monteiro
 */
public class MergedPdf extends javax.swing.JPanel {

    private ModelTablePDFs modelTable;

    /**
     * Creates new form MergedPdf1
     */
    public MergedPdf() {
        initComponents();
        initComponentCustom();
    }

    /**
     * This method initializes the components in a customized way.
     */
    private void initComponentCustom() {

        this.modelTable = new ModelTablePDFs();
        this.modelTable.setColumnWidth(tblFilesMerged, 0, 100);
        this.modelTable.setColumnWidth(tblFilesMerged, 1, 200);

        this.tblFilesMerged.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_UP, 0), "MoveUp");
        this.tblFilesMerged.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0), "MoveDown");
        this.tblFilesMerged.setDragEnabled(true);
        tblActionMap();
        this.tblFilesMerged.setModel(modelTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcome = new javax.swing.JLabel();
        btnOpenFileChooser = new javax.swing.JButton();
        txtNameFileMerged = new javax.swing.JTextField();
        lblNamefile = new javax.swing.JLabel();
        btnMergedFiles = new javax.swing.JButton();
        pnlFilesMerged = new javax.swing.JPanel();
        scFilesMerged = new javax.swing.JScrollPane();
        tblFilesMerged = new javax.swing.JTable();
        btnRemovePdfs = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 153, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        setPreferredSize(new java.awt.Dimension(420, 220));

        lblWelcome.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcome.setText("Bem-vindo ao Mesclador de PDFs");

        btnOpenFileChooser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnOpenFileChooser.setText("Abrir PDFs");
        btnOpenFileChooser.setToolTipText("Selecionar PDFs para mesclar");
        btnOpenFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFileChooserActionPerformed(evt);
            }
        });

        lblNamefile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNamefile.setForeground(new java.awt.Color(255, 255, 255));
        lblNamefile.setText("Nome do arquivo:");

        btnMergedFiles.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMergedFiles.setText("Juntar");
        btnMergedFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMergedFilesActionPerformed(evt);
            }
        });

        tblFilesMerged.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scFilesMerged.setViewportView(tblFilesMerged);

        javax.swing.GroupLayout pnlFilesMergedLayout = new javax.swing.GroupLayout(pnlFilesMerged);
        pnlFilesMerged.setLayout(pnlFilesMergedLayout);
        pnlFilesMergedLayout.setHorizontalGroup(
            pnlFilesMergedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scFilesMerged, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        pnlFilesMergedLayout.setVerticalGroup(
            pnlFilesMergedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scFilesMerged, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        btnRemovePdfs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRemovePdfs.setText("Deletar PDFs");
        btnRemovePdfs.setToolTipText("Remover da lista os arquivos selecionados");
        btnRemovePdfs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePdfsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addComponent(pnlFilesMerged, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblNamefile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNameFileMerged))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnMergedFiles))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnOpenFileChooser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemovePdfs)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnOpenFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemovePdfs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFilesMerged, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNameFileMerged, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNamefile))
                .addGap(18, 18, 18)
                .addComponent(btnMergedFiles)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFileChooserActionPerformed
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        openJFileChooser();
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnOpenFileChooserActionPerformed

    private void btnRemovePdfsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePdfsActionPerformed
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        this.modelTable.removeRowsSelected(this.tblFilesMerged);
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnRemovePdfsActionPerformed

    private void btnMergedFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMergedFilesActionPerformed
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        String validString = checkFields();
        if (validString.equals("")) {
            String[] files = this.modelTable.getFilesCheckBoxSelected(tblFilesMerged, 2);

            if (files.length < 2) {
                JOptionPane.showMessageDialog(null, "Selecione mais de um PDF!", "Aviso!", JOptionPane.OK_OPTION);
            } else {
                mergePDFs(files, txtNameFileMerged.getText());
            }
        } else {
            JOptionPane.showMessageDialog(null, validString, "Aviso!", JOptionPane.OK_OPTION);
        }
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnMergedFilesActionPerformed

    /**
     * This event move rows JTable Keys Keyboard.
     */
    private void tblActionMap() {
        this.tblFilesMerged.getActionMap().put("MoveUp", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                modelTable.moveSelectedRows(tblFilesMerged, -1);
            }
        });
        this.tblFilesMerged.getActionMap().put("MoveDown", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                modelTable.moveSelectedRows(tblFilesMerged, 1);
            }
        });
    }

    /**
     * This method will open jfilechosser so that you can select the pdf files
     * to merge.
     */
    private void openJFileChooser() {
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.pdf", "pdf");

        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setDialogTitle("Selecione os arquivos PDFs");
        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setFileFilter(filter);
        fileChooser.setSize(new Dimension(890, 600));
        Action details = fileChooser.getActionMap().get("viewTypeDetails");
        details.actionPerformed(null);

        File[] selectedFiles;
        int result = fileChooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFiles = fileChooser.getSelectedFiles();
            if (selectedFiles.length < 2 && tblFilesMerged.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Selecione mais de um PDF!", "Aviso!", JOptionPane.OK_OPTION);
                openJFileChooser();
            } else {
                for (File file : selectedFiles) {
                    this.modelTable.addRowWithCheckboxAndName(true, file.getName(), file.getPath());
                }
            }
        }
    }

    /**
     * This method is responsible for merging PDF files.
     *
     * @param pdfFiles
     * @param mergedPdfFile
     */
    private void mergePDFs(String[] files, String mergedPdfFileName) {
        try {
            if (!mergedPdfFileName.endsWith(".pdf")) {
                mergedPdfFileName = mergedPdfFileName.trim().concat(".pdf");
            }

            FileSystemView fileSystemView = FileSystemView.getFileSystemView();
            String downloadsDir = fileSystemView.getHomeDirectory().toString();
            String mergedPdfFilePath = downloadsDir + File.separator + mergedPdfFileName;

            PdfMerger merger = new PdfMerger(new PdfDocument(new PdfWriter(mergedPdfFilePath)));

            // Adds each merged document
            for (String file : files) {
                try (PdfDocument pdfDoc = new PdfDocument(new PdfReader(file.replace("null", "")))) {
                    merger.merge(pdfDoc, 1, pdfDoc.getNumberOfPages());
                }
            }
            
            // Close document merged
            merger.close();

            System.out.println("PDFs mesclados com sucesso!");
        } catch (IOException e) {
            System.err.println("Erro ao mesclar PDFs: " + e.getMessage());
        }
    }

    /**
     * Valid fields.
     *
     * @return message.
     */
    private String checkFields() {
        if (txtNameFileMerged.getText().trim().equals("")) {
            return "Digite um nome para o arquivo mesclado!";
        }
        return "";
    }

    /**
     * Run application.
     *
     * @param args
     */
    public static void main(String[] args) {
        JFrame frame = new JFrame("Juntar PDFs");
        frame.add(new MergedPdf());
        frame.setVisible(true);
        frame.setSize(850, 380);
        frame.setResizable(false);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMergedFiles;
    private javax.swing.JButton btnOpenFileChooser;
    private javax.swing.JButton btnRemovePdfs;
    private javax.swing.JLabel lblNamefile;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JPanel pnlFilesMerged;
    private javax.swing.JScrollPane scFilesMerged;
    private javax.swing.JTable tblFilesMerged;
    private javax.swing.JTextField txtNameFileMerged;
    // End of variables declaration//GEN-END:variables
}
